name: documentation

on: [push, pull_request, workflow_dispatch]



jobs:
  build-docs:
    name: Build docs
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # Install python
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx
          pip install -r documentation/requirements.txt

      # Sphinx build
      - name: Sphinx build
        if: ${{ github.event_name == 'push' }}
        run: |
          sphinx-build documentation/content documentation/_build

      # Stage all deployed assets in _gh-pages
      - name: Copy deployment data to _gh-pages/
        if: ${{ github.event_name == 'push' }}
        run:
          rsync -a documentation/_build/ _gh-pages/

      # Add the .nojekyll file
      - name: nojekyll
        if: ${{ github.event_name == 'push' }}
        run: |
          touch _gh-pages/.nojekyll

      # Save artifact for the next step.
      - uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'push' }}
        with:
          name: github-pages
          path: _gh-pages/          


  # Deploy in a separate job so that write permissions are restricted
  # to the minimum steps.
  deploy:
    name: Deploy
    needs: build-docs
    # This if can't use the env context - find better way later.
    if: ${{ github.event_name == 'push' }}
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
